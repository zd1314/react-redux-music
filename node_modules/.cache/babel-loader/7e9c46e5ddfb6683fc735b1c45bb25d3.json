{"ast":null,"code":"var _jsxFileName = \"/Users/jusfoun/Desktop/me/zdd/react-redux-music/src/components/process/process.js\";\nimport React from 'react';\nimport music from './music.png';\nimport gold from './gold.png';\n\nclass Process extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        name: \"绿钻豪华版：未开通\",\n        val: 50,\n        text: ['LV0', 'LV1']\n      }, {\n        name: \"付费音乐包：未开通\",\n        val: 90,\n        text: ['LV01', 'LV2']\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.data.map((s, i) => {\n      let bg = null;\n\n      if (i == 0) {\n        bg = gold;\n      } else if (i == 1) {\n        bg = music;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          borderBottom: '1px solid #ededed',\n          boxSizing: 'border-box',\n          paddingLeft: 10,\n          paddingTop: 20\n        },\n        key: s + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          width: 16,\n          height: 16,\n          background: \"url(\".concat(bg, \") no-repeat\"),\n          display: 'block',\n          marginLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"container\",\n        ref: ref => this.container = ref,\n        style: {\n          width: 172\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        ref: ref => this._circle0 = ref,\n        style: {\n          borderColor: '#f0f0f0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        ref: ref => this._circle1 = ref,\n        style: {\n          borderColor: '#f0f0f0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"process-wrap\",\n        ref: ref => this._process = ref,\n        style: {\n          width: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"waterPop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, s.text[0]), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, s.text[1])))), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: '#666',\n          marginBottom: 10,\n          marginLeft: -77\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, s.name));\n    }));\n  }\n\n  componentDidMount() {\n    const me = this;\n    let num = 0;\n    let w = parseFloat(this.container.style.width);\n    me.state.data.map((s, i) => {\n      let timer = setInterval(() => {\n        num += 1;\n\n        if (num <= s.val) {\n          let disx = this._process.style.width = num / 100 * w;\n\n          if (35 < disx && disx <= 135) {\n            me._circle0.style.borderColor = '#62bf82';\n          } else if (disx > 135) {\n            this._circle1.style.borderColor = '#62bf82';\n          }\n\n          this._process.style.width = disx + 'px';\n        } else {\n          clearInterval(timer);\n        }\n      }, 60);\n    });\n  }\n\n}\n\nexport default Process;","map":{"version":3,"sources":["/Users/jusfoun/Desktop/me/zdd/react-redux-music/src/components/process/process.js"],"names":["React","music","gold","Process","Component","constructor","props","state","data","name","val","text","render","map","s","i","bg","borderBottom","boxSizing","paddingLeft","paddingTop","display","marginBottom","width","height","background","marginLeft","ref","container","_circle0","borderColor","_circle1","_process","fontSize","color","componentDidMount","me","num","w","parseFloat","style","timer","setInterval","disx","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\nimport music from './music.png';\nimport gold from './gold.png';\nclass Process extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { name: \"绿钻豪华版：未开通\", val: 50, text: ['LV0', 'LV1'] },\n        { name: \"付费音乐包：未开通\", val: 90, text: ['LV01', 'LV2'] }\n      ]\n    }\n  }\n  render() {\n    return (\n      <div>\n        {\n          this.state.data.map((s, i) => {\n            let bg = null;\n            if (i == 0) {\n              bg = gold\n            } else if (i == 1) {\n              bg = music\n            }\n            return <div style={{\n              borderBottom: '1px solid #ededed',\n              boxSizing: 'border-box',\n              paddingLeft: 10,\n              paddingTop: 20\n            }} key={s + i}>\n\n              <div style={{\n                display: 'flex',\n                marginBottom: 10\n\n              }}>\n                <span style={{\n                  width: 16,\n                  height: 16,\n                  background: `url(${bg}) no-repeat`,\n                  display: 'block',\n                  marginLeft: 20\n                }}></span>\n                <div id='container' ref={ref => this.container = ref} style={{\n                  width: 172\n                }}>\n                  <span ref={ref => this._circle0 = ref} style={{\n                    borderColor: '#f0f0f0'\n                  }}></span>\n                  <span ref={ref => this._circle1 = ref} style={{\n                    borderColor: '#f0f0f0'\n                  }} ></span>\n                  <div className=\"process-wrap\" ref={ref => this._process = ref} style={{\n                    width: 0\n                  }}></div>\n                  <div className=\"waterPop\">\n                    <i>{s.text[0]}</i>\n                    <i>{s.text[1]}</i>\n                  </div>\n                </div>\n              </div>\n              <div style={{ fontSize: 12, color: '#666', marginBottom: 10, marginLeft: -77 }}>{s.name}</div>\n            </div>\n          })\n        }\n\n      </div>\n    )\n  }\n  componentDidMount() {\n    const me = this;\n    let num = 0;\n    let w = parseFloat(this.container.style.width);\n    me.state.data.map((s, i) => {\n      let timer = setInterval(() => {\n        num += 1;\n        if (num <= s.val) {\n          let disx = this._process.style.width = (num / 100 * w);\n          if (35 < disx && disx <= 135) {\n            me._circle0.style.borderColor = '#62bf82'\n          }\n          else if (disx > 135) {\n            this._circle1.style.borderColor = '#62bf82'\n          }\n          this._process.style.width = disx + 'px';\n        } else {\n          clearInterval(timer)\n        }\n\n      }, 60)\n    })\n  }\n}\nexport default Process;"]},"metadata":{},"sourceType":"module"}